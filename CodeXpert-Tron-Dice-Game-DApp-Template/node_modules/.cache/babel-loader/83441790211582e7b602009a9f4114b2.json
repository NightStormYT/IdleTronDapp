{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TG3ZkaEvTb4wKrcE6a7ETKo6hgAswbcNGy'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      buyValue: 10,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.changeSide = _this.changeSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.init = _this.init.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBuyValue = _this.updateBuyValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyTron = _this.buyTron.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTronBalance = _this.getTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTron2Balance = _this.getTron2Balance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMicroTronBalance = _this.getMicroTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.TryOne = _this.TryOne.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.TryTwo = _this.TryTwo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.TryThree = _this.TryThree.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!global.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.getTronBalance();\n      document.getElementById(\"dice-game\").style.display = \"block\";\n      setInterval(function () {\n        this.getTronBalance();\n      }, 2000);\n    }\n  }, {\n    key: \"getTronBalance\",\n    value: function () {\n      var _getTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var bal;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Utils.contract.getBalance().call();\n\n              case 2:\n                bal = _context2.sent.toNumber();\n                console.log(\"Tron Balance:\", bal);\n                document.getElementById(\"tron\").innerHTML = bal;\n                this.getTron2Balance();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getTronBalance() {\n        return _getTronBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTron2Balance\",\n    value: function () {\n      var _getTron2Balance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var bal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Utils.contract.getMyTron2().call();\n\n              case 2:\n                bal = _context3.sent.toNumber();\n                console.log(\"TronÂ² Balance:\", bal);\n                document.getElementById(\"tron2\").innerHTML = bal;\n                this.getMicroTronBalance();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTron2Balance() {\n        return _getTron2Balance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getMicroTronBalance\",\n    value: function () {\n      var _getMicroTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var bal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Utils.contract.getMyMicroTron().call();\n\n              case 2:\n                bal = _context4.sent.toNumber();\n                console.log(\"MicroTron Balance:\", bal);\n                document.getElementById(\"microTron2\").innerHTML = bal;\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getMicroTronBalance() {\n        return _getMicroTronBalance.apply(this, arguments);\n      };\n    }() //setInterval(getBalance, 1000);\n\n  }, {\n    key: \"changeSide\",\n    value: function () {\n      var _changeSide = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                Utils.contract.buyTron2(this.state.buyValue).send({\n                  shouldPollResponse: true,\n                  callValue: 0\n                }).then(function (res) {\n                  return Swal({\n                    title: 'Purchase Sucessful!',\n                    type: 'success'\n                  });\n                }).catch(function (err) {\n                  return Swal({\n                    title: 'Purchase Failed.',\n                    type: 'error'\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function changeSide() {\n        return _changeSide.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updateBuyValue\",\n    value: function () {\n      var _updateBuyValue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(evt) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (evt.target.value < 10) evt.target.value = 10;\n                _context6.next = 3;\n                return this.setState({\n                  buyValue: evt.target.value\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function updateBuyValue(_x) {\n        return _updateBuyValue.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"buyTron\",\n    value: function () {\n      var _buyTron = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                Utils.contract.buyTron2(this.state.buyValue).send({\n                  shouldPollResponse: true,\n                  callValue: 0\n                }).then(function (res) {\n                  return Swal({\n                    title: 'Post Created',\n                    type: 'success'\n                  });\n                }).catch(function (err) {\n                  return Swal({\n                    title: 'Post Failed',\n                    type: 'error'\n                  });\n                });\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function buyTron() {\n        return _buyTron.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"TryOne\",\n    value: function () {\n      var _TryOne = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Utils.contract.tryTimeOne().call();\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function TryOne() {\n        return _TryOne.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"TryTwo\",\n    value: function () {\n      var _TryTwo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Utils.contract.tryTimeTwo().call();\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      return function TryTwo() {\n        return _TryTwo.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"TryThree\",\n    value: function () {\n      var _TryThree = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return Utils.contract.tryTimeThree().call();\n\n              case 2:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      return function TryThree() {\n        return _TryThree.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"rw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gameHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"headerTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Idle Tron\"), React.createElement(\"div\", {\n        className: \"headSpacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Tron\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Tron\\xB2\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"microTron2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"MicroTron\"))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"getTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.getTronBalance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Update Tron Balance\"), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.TryOne();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Try1\"), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.TryTwo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Try2\"), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.TryThree();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Try3\"), React.createElement(\"div\", {\n        className: \"div-bet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Buy MicroTron:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          width: \"100px\"\n        },\n        value: this.state.buyValue,\n        onChange: this.updateBuyValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.changeSide();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Buy Tron\\xB2\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","buyValue","tronWeb","installed","loggedIn","changeSide","bind","init","updateBuyValue","buyTron","getTronBalance","getTron2Balance","getMicroTronBalance","TryOne","TryTwo","TryThree","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","global","defaultAddress","hex","address","toHex","base58","on","setTronWeb","document","getElementById","style","display","contract","getBalance","call","bal","toNumber","console","log","innerHTML","getMyTron2","getMyMicroTron","buyTron2","send","shouldPollResponse","callValue","then","res","title","type","catch","err","evt","target","value","tryTimeOne","tryTimeTwo","tryTimeThree","event","preventDefault","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TG3ZkaEvTb4wKrcE6a7ETKo6hgAswbcNGy';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            buyValue:10,\n\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            },\n        }\n        this.changeSide = this.changeSide.bind(this)\n        this.init = this.init.bind(this)\n        this.updateBuyValue = this.updateBuyValue.bind(this)\n\n        this.buyTron = this.buyTron.bind(this);\n        this.getTronBalance = this.getTronBalance.bind(this);\n        this.getTron2Balance = this.getTron2Balance.bind(this);\n        this.getMicroTronBalance = this.getMicroTronBalance.bind(this);\n\n        this.TryOne = this.TryOne.bind(this);\n        this.TryTwo = this.TryTwo.bind(this);\n        this.TryThree = this.TryThree.bind(this);\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!global.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n\n    init()\n    {\n        this.getTronBalance();\n        document.getElementById(\"dice-game\").style.display = \"block\";\n        setInterval(function(){\n            this.getTronBalance();\n        }, 2000);\n    }\n\n    async getTronBalance()\n    {\n        const bal = (await Utils.contract.getBalance().call()).toNumber();\n        console.log(\"Tron Balance:\", bal);\n        document.getElementById(\"tron\").innerHTML = bal;\n        this.getTron2Balance();\n    }\n\n    async getTron2Balance()\n    {\n        const bal = (await Utils.contract.getMyTron2().call()).toNumber();\n        console.log(\"TronÂ² Balance:\", bal);\n        document.getElementById(\"tron2\").innerHTML = bal;\n        this.getMicroTronBalance();\n    }\n\n    async getMicroTronBalance()\n    {\n        const bal = (await Utils.contract.getMyMicroTron().call()).toNumber();\n        console.log(\"MicroTron Balance:\", bal);\n        document.getElementById(\"microTron2\").innerHTML = bal;\n    }\n\n    //setInterval(getBalance, 1000);\n\n    async changeSide()\n    {\n        Utils.contract.buyTron2(this.state.buyValue).send({\n            shouldPollResponse: true,\n            callValue: 0\n        }).then(res => Swal({\n            title: 'Purchase Sucessful!',\n            type: 'success'\n        })).catch(err => Swal({\n            title: 'Purchase Failed.',\n            type: 'error'\n        }));\n    }\n\n    async updateBuyValue (evt)\n    {\n        if (evt.target.value < 10)\n            evt.target.value = 10\n        await this.setState({\n            buyValue: evt.target.value\n        });\n    }\n\n    async buyTron()\n    {\n        Utils.contract.buyTron2(this.state.buyValue).send({\n                    shouldPollResponse: true,\n                    callValue: 0\n                }).then(res => Swal({\n                    title: 'Post Created',\n                    type: 'success'\n                })).catch(err => Swal({\n                    title: 'Post Failed',\n                    type: 'error',\n        }));\n    }\n\n    async TryOne()\n    {\n        await Utils.contract.tryTimeOne().call();\n    }\n\n    async TryTwo()\n    {\n        await Utils.contract.tryTimeTwo().call();\n    }\n\n    async TryThree()\n    {\n        await Utils.contract.tryTimeThree().call();\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n\n            <div className='rw'>\n\n                <div className=\"gameHeader\">\n                    <div id=\"headerTitle\">\n                        Idle Tron\n                    </div>\n\n                    <div className=\"headSpacer\">\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            Tron\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron2\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            TronÂ²\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"microTron2\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            MicroTron\n                        </p>\n                    </div>\n                </div>\n                <div className='text-center'>\n                    <hr/>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                    <span id=\"getTron\"></span>\n                    <br></br>\n                    <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.getTronBalance();}}>\n                        Update Tron Balance\n                    </button>\n\n\n                    <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.TryOne();}}>\n                        Try1\n                    </button>\n                    <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.TryTwo();}}>\n                        Try2\n                    </button>\n                    <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.TryThree();}}>\n                        Try3\n                    </button>\n\n                    <div className=\"div-bet\">\n                        Buy MicroTron:\n                        <br></br>\n                        <input style={{ width:\"100px\" }} value={this.state.buyValue} onChange={this.updateBuyValue}/>\n                        <br></br>\n                        <br></br>\n                        <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.changeSide();}}>\n                            Buy TronÂ²\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}