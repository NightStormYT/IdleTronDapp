{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TCxHTBTfBAJoAhMJDuMEXG25ho3HWBr384'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      buyValue: 10,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.changeSide = _this.changeSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.init = _this.init.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBuyValue = _this.updateBuyValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyTron = _this.buyTron.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTronBalance = _this.getTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTron2Balance = _this.getTron2Balance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMicroTronBalance = _this.getMicroTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!global.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.getTronBalance();\n      document.getElementById(\"dice-game\").style.display = \"block\";\n      setInterval(function () {\n        this.getTronBalance();\n      }, 2000);\n    }\n  }, {\n    key: \"getTronBalance\",\n    value: function () {\n      var _getTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var playerAddress, bal;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress = _context2.sent;\n                _context2.next = 5;\n                return Utils.contract.getBalance(playerAddress).call();\n\n              case 5:\n                bal = _context2.sent.toNumber();\n                console.log(\"Tron Balance:\", bal);\n                document.getElementById(\"tron\").innerHTML = bal;\n                this.getTron2Balance();\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getTronBalance() {\n        return _getTronBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTron2Balance\",\n    value: function () {\n      var _getTron2Balance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var playerAddress, bal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress = _context3.sent;\n                _context3.next = 5;\n                return Utils.contract.getMyTron2(playerAddress).call();\n\n              case 5:\n                bal = _context3.sent.toNumber();\n                console.log(\"TronÂ² Balance:\", bal);\n                document.getElementById(\"tron2\").innerHTML = bal;\n                this.getMicroTronBalance();\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTron2Balance() {\n        return _getTron2Balance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getMicroTronBalance\",\n    value: function () {\n      var _getMicroTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var playerAddress, bal;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress = _context4.sent;\n                _context4.next = 5;\n                return Utils.contract.getMyMicroTron(playerAddress).call();\n\n              case 5:\n                bal = _context4.sent.toNumber();\n                console.log(\"MicroTron Balance:\", bal);\n                document.getElementById(\"microTron\").innerHTML = bal;\n                this.getMicroTronBalance();\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getMicroTronBalance() {\n        return _getMicroTronBalance.apply(this, arguments);\n      };\n    }() //setInterval(getBalance, 1000);\n\n  }, {\n    key: \"changeSide\",\n    value: function () {\n      var _changeSide = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var playerAddress;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress = _context5.sent;\n                Utils.contract.buyTron2(this.state.buyValue, playerAddress).send({\n                  shouldPollResponse: true,\n                  callValue: 0\n                }).then(function (res) {\n                  return Swal({\n                    title: 'Purchase Sucessful!',\n                    type: 'success'\n                  });\n                }).catch(function (err) {\n                  return Swal({\n                    title: 'Purchase Failed.',\n                    type: 'error'\n                  });\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function changeSide() {\n        return _changeSide.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updateBuyValue\",\n    value: function () {\n      var _updateBuyValue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(evt) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (evt.target.value < 10) evt.target.value = 10;\n                _context6.next = 3;\n                return this.setState({\n                  buyValue: evt.target.value\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function updateBuyValue(_x) {\n        return _updateBuyValue.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"buyTron\",\n    value: function () {\n      var _buyTron = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var _this3 = this;\n\n        var _ref, value;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Swal({\n                  title: 'Buy TronÂ²',\n                  text: 'Enter TronÂ² amount in TRX',\n                  confirmButtonText: 'Buy',\n                  input: 'text',\n                  showCancelButton: true,\n                  showLoaderOnConfirm: true,\n                  reverseButtons: true,\n                  allowOutsideClick: function allowOutsideClick() {\n                    return !Swal.isLoading();\n                  },\n                  allowEscapeKey: function allowEscapeKey() {\n                    return !Swal.isLoading();\n                  },\n                  preConfirm: function preConfirm(amount) {\n                    if (isNaN(amount) || amount <= 0) {\n                      Swal.showValidationMessage('Invalid TronÂ² amount provided');\n                      return false;\n                    }\n\n                    return Utils.contract.tipMessage(_this3.state.buyValue).send({\n                      callValue: Number(amount) * 1000000\n                    }).then(function () {\n                      return true;\n                    }).catch(function (err) {\n                      Swal.showValidationMessage(err);\n                    });\n                  }\n                });\n\n              case 2:\n                _ref = _context7.sent;\n                value = _ref.value;\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function buyTron() {\n        return _buyTron.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"rw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"gameHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"headerTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Idle Tron\"), React.createElement(\"div\", {\n        className: \"headSpacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Tron\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Tron\\xB2\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"microTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"MicroTron\"))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"getTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.getTronBalance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Update Tron Balance\"), React.createElement(\"div\", {\n        className: \"div-bet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"1 Tron = 0.95 Tron\\xB2\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          width: \"100px\"\n        },\n        value: this.state.buyValue,\n        onChange: this.updateBuyValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.buyTron();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Buy Tron\\xB2\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","buyValue","tronWeb","installed","loggedIn","changeSide","bind","init","updateBuyValue","buyTron","getTronBalance","getTron2Balance","getMicroTronBalance","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","global","defaultAddress","hex","address","toHex","base58","on","setTronWeb","document","getElementById","style","display","contract","getPlayerAddress","call","playerAddress","getBalance","bal","toNumber","console","log","innerHTML","getMyTron2","getMyMicroTron","buyTron2","send","shouldPollResponse","callValue","then","res","title","type","catch","err","evt","target","value","text","confirmButtonText","input","showCancelButton","showLoaderOnConfirm","reverseButtons","allowOutsideClick","isLoading","allowEscapeKey","preConfirm","amount","isNaN","showValidationMessage","tipMessage","Number","event","preventDefault","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TCxHTBTfBAJoAhMJDuMEXG25ho3HWBr384';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            buyValue:10,\n\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            },\n        }\n        this.changeSide = this.changeSide.bind(this)\n        this.init = this.init.bind(this)\n        this.updateBuyValue = this.updateBuyValue.bind(this)\n\n        this.buyTron = this.buyTron.bind(this);\n        this.getTronBalance = this.getTronBalance.bind(this);\n        this.getTron2Balance = this.getTron2Balance.bind(this);\n        this.getMicroTronBalance = this.getMicroTronBalance.bind(this);\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!global.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n\n    init()\n    {\n        this.getTronBalance();\n        document.getElementById(\"dice-game\").style.display = \"block\";\n        setInterval(function(){\n            this.getTronBalance();\n        }, 2000);\n    }\n\n    async getTronBalance()\n    {\n        const playerAddress = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.getBalance(playerAddress).call()).toNumber();\n        console.log(\"Tron Balance:\", bal);\n        document.getElementById(\"tron\").innerHTML = bal;\n        this.getTron2Balance();\n    }\n\n    async getTron2Balance()\n    {\n        const playerAddress = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.getMyTron2(playerAddress).call()).toNumber();\n        console.log(\"TronÂ² Balance:\", bal);\n        document.getElementById(\"tron2\").innerHTML = bal;\n        this.getMicroTronBalance();\n    }\n\n    async getMicroTronBalance()\n    {\n        const playerAddress = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.getMyMicroTron(playerAddress).call()).toNumber();\n        console.log(\"MicroTron Balance:\", bal);\n        document.getElementById(\"microTron\").innerHTML = bal;\n        this.getMicroTronBalance();\n    }\n\n    //setInterval(getBalance, 1000);\n\n    async changeSide()\n    {\n        const playerAddress = await Utils.contract.getPlayerAddress().call();\n        Utils.contract.buyTron2(this.state.buyValue, playerAddress).send({\n            shouldPollResponse: true,\n            callValue: 0\n        }).then(res => Swal({\n            title: 'Purchase Sucessful!',\n            type: 'success'\n        })).catch(err => Swal({\n            title: 'Purchase Failed.',\n            type: 'error'\n        }));\n    }\n\n    async updateBuyValue (evt)\n    {\n        if (evt.target.value < 10)\n            evt.target.value = 10\n        await this.setState({\n            buyValue: evt.target.value\n        });\n    }\n\n    async buyTron()\n    {\n        /*const playerAddress = await Utils.contract.getPlayerAddress().call();\n        Utils.contract.buyTron2(this.state.buyValue, playerAddress).send({\n                    shouldPollResponse: true,\n                    callValue: 3,\n                    value: 3\n                }).then(res => Swal({\n                    title: 'Post Created',\n                    type: 'success'\n                })).catch(err => Swal({\n                    title: 'Post Failed',\n                    type: 'error',\n        }));*/\n\n        const { value } = await Swal({\n                    title: 'Buy TronÂ²',\n                    text: 'Enter TronÂ² amount in TRX',\n                    confirmButtonText: 'Buy',\n                    input: 'text',\n                    showCancelButton: true,\n                    showLoaderOnConfirm: true,\n                    reverseButtons: true,\n                    allowOutsideClick: () => !Swal.isLoading(),\n                    allowEscapeKey: () => !Swal.isLoading(),\n                    preConfirm: amount => {\n                        if(isNaN(amount) || amount <= 0) {\n                            Swal.showValidationMessage('Invalid TronÂ² amount provided');\n                            return false;\n                        }\n\n                        return Utils.contract.tipMessage(this.state.buyValue).send({\n                            callValue: Number(amount) * 1000000\n                        }).then(() => true).catch(err => {\n                            Swal.showValidationMessage(err);\n                        });\n                    }\n                });\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n\n            <div className='rw'>\n\n                <div className=\"gameHeader\">\n                    <div id=\"headerTitle\">\n                        Idle Tron\n                    </div>\n\n                    <div className=\"headSpacer\">\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            Tron\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron2\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            TronÂ²\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"microTron\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            MicroTron\n                        </p>\n                    </div>\n                </div>\n                <div className='text-center'>\n                    <hr/>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                    <span id=\"getTron\"></span>\n                    <br></br>\n                    <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.getTronBalance();}}>\n                        Update Tron Balance\n                    </button>\n\n                    <div className=\"div-bet\">\n                        1 Tron = 0.95 TronÂ²\n                        <br></br>\n                        <input style={{ width:\"100px\" }} value={this.state.buyValue} onChange={this.updateBuyValue}/>\n                        <br></br>\n                        <br></br>\n                        <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.buyTron();}}>\n                            Buy TronÂ²\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}