{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TRi54MRJgohaA1yiFesZAY1NKYey9HJcLv'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      buyValue: 10,\n      playerAddress: 'yes',\n      tempAddress: 'plz',\n      originalPlayer: 'wow',\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.init = _this.init.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBuyValue = _this.updateBuyValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyTron = _this.buyTron.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTronBalance = _this.getTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTron2Balance = _this.getTron2Balance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMicroTronBalance = _this.getMicroTronBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getContractBalance = _this.getContractBalance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.microTronToTron = _this.microTronToTron.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlayerAddressInput = _this.updatePlayerAddressInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.returnHome = _this.returnHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onOtherPlayer = _this.onOtherPlayer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var temp;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!global.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n                _context.next = 8;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 8:\n                temp = _context.sent;\n                console.log(temp);\n                this.setState({\n                  playerAddress: temp\n                });\n                this.setState({\n                  originalPlayer: temp\n                });\n                console.log(this.state.playerAddress);\n                console.log(this.tronWeb); //document.getElementById(\"productionText3\").innerHTML = \"Current Player: \" + this.tronWeb.address.fromHex((this.state.playerAddress).toString());\n                //this.getContractBalance();\n\n                this.init();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"init\",\n    value: function init() {\n      var publicPlayer = 1;\n      this.getContractBalance();\n      document.getElementById(\"dice-game\").style.display = \"block\";\n      setInterval(function () {\n        this.getTronBalance();\n      }, 2000);\n      Utils.setTronWeb(window.tronWeb, contractAddress);\n    }\n  }, {\n    key: \"openSearch\",\n    value: function openSearch() {\n      document.getElementById(\"player-search\").style.display = \"block\";\n    }\n  }, {\n    key: \"closeSearch\",\n    value: function closeSearch() {\n      document.getElementById(\"player-search\").style.display = \"none\";\n    }\n  }, {\n    key: \"searchThatPlayer\",\n    value: function searchThatPlayer() {\n      this.setState({\n        playerAddress: this.state.tempAddress\n      });\n    }\n  }, {\n    key: \"getContractBalance\",\n    value: function () {\n      var _getContractBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var bal, exponent, mantissa;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Utils.contract.getContractBalance().call();\n\n              case 2:\n                bal = _context2.sent.toNumber();\n\n                if (bal > 1000) {\n                  exponent = Math.floor(Math.log10(Math.abs(bal)));\n                  mantissa = bal / Math.pow(10, exponent);\n                  document.getElementById(\"contractBal\").innerHTML = \"Contract Balance \" + mantissa.toFixed(2) + \"e\" + exponent + \" TRX\";\n                } else document.getElementById(\"contractBal\").innerHTML = \"Contract Balance \" + bal + \" TRX\";\n\n                document.getElementById(\"productionText3\").innerHTML = \"Current Player: \" + this.tronWeb.address.fromHex(this.state.playerAddress.toString());\n                this.getTronBalance();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getContractBalance() {\n        return _getContractBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTronBalance\",\n    value: function () {\n      var _getTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var playerAddress2, playerAd3, bal, exponent, mantissa;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                playerAddress2 = this.state.playerAddress;\n                _context3.next = 3;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 3:\n                playerAd3 = _context3.sent;\n                console.log(playerAddress2);\n                console.log(playerAd3);\n                console.log(this.state.playerAddress);\n                _context3.next = 9;\n                return Utils.contract.getBalance(this.state.playerAddress).call();\n\n              case 9:\n                bal = _context3.sent.toNumber();\n\n                if (bal > 1000) {\n                  exponent = Math.floor(Math.log10(Math.abs(bal)));\n                  mantissa = bal / Math.pow(10, exponent);\n                  document.getElementById(\"tron\").innerHTML = mantissa.toFixed(2) + \"e\" + exponent;\n                } else document.getElementById(\"tron\").innerHTML = bal;\n\n                this.getTron2Balance();\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function getTronBalance() {\n        return _getTronBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getTron2Balance\",\n    value: function () {\n      var _getTron2Balance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var playerAddress2, bal, production, temp1, temp2, exponent, mantissa, _exponent, _mantissa, _exponent2, _mantissa2;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context4.sent;\n                _context4.next = 5;\n                return Utils.contract.getMyTron2(this.state.playerAddress).call();\n\n              case 5:\n                bal = _context4.sent.toNumber();\n                production = bal * 5;\n                temp1 = production / 100;\n                temp2 = (production / 100 * 100 - production / 100 * 0.05 * 100) / 1000000;\n\n                if (temp1 > 1000) {\n                  exponent = Math.floor(Math.log10(Math.abs(temp1)));\n                  mantissa = temp1 / Math.pow(10, exponent);\n                  document.getElementById(\"productionText\").innerHTML = \"~\" + mantissa.toFixed(2) + \"e\" + exponent + \" MicroTron per Second\";\n                } else document.getElementById(\"productionText\").innerHTML = \"~\" + temp1.toFixed(2) + \" MicroTron per Second\";\n\n                if (temp2 > 1000) {\n                  _exponent = Math.floor(Math.log10(Math.abs(temp2)));\n                  _mantissa = temp2 / Math.pow(10, _exponent);\n                  document.getElementById(\"productionText2\").innerHTML = \"~\" + _mantissa.toFixed(2) + \"e\" + _exponent + \" TRX per Second\";\n                } else document.getElementById(\"productionText2\").innerHTML = \"~\" + temp2.toFixed(8) + \" TRX per Second\";\n\n                if (bal > 1000) {\n                  _exponent2 = Math.floor(Math.log10(Math.abs(bal)));\n                  _mantissa2 = bal / Math.pow(10, _exponent2);\n                  document.getElementById(\"tron2\").innerHTML = _mantissa2.toFixed(2) + \"e\" + _exponent2;\n                } else document.getElementById(\"tron2\").innerHTML = bal;\n\n                this.getMicroTronBalance();\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function getTron2Balance() {\n        return _getTron2Balance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getMicroTronBalance\",\n    value: function () {\n      var _getMicroTronBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var playerAddress2, bal, exponent, mantissa;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context5.sent;\n                _context5.next = 5;\n                return Utils.contract.getMyMicroTron(this.state.playerAddress).call();\n\n              case 5:\n                bal = _context5.sent.toNumber();\n\n                if (bal > 1000) {\n                  exponent = Math.floor(Math.log10(Math.abs(bal)));\n                  mantissa = bal / Math.pow(10, exponent);\n                  document.getElementById(\"microTron\").innerHTML = mantissa.toFixed(2) + \"e\" + exponent;\n                } else document.getElementById(\"microTron\").innerHTML = bal;\n\n                this.microTronToTron();\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function getMicroTronBalance() {\n        return _getMicroTronBalance.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"microTronToTron\",\n    value: function () {\n      var _microTronToTron = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var playerAddress2, bal, exponent, mantissa;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context6.sent;\n                _context6.next = 5;\n                return Utils.contract.microTronToTron(this.state.playerAddress).call();\n\n              case 5:\n                bal = _context6.sent.toNumber();\n\n                if (bal > 1000) {\n                  exponent = Math.floor(Math.log10(Math.abs(bal)));\n                  mantissa = bal / Math.pow(10, exponent);\n                  document.getElementById(\"microTronToTron\").innerHTML = \"Sell MicroTron for \" + mantissa.toFixed(2) + \"e\" + exponent + \" TRX\";\n                } else document.getElementById(\"microTronToTron\").innerHTML = \"Sell MicroTron for \" + bal + \" TRX\";\n\n                this.onOtherPlayer();\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function microTronToTron() {\n        return _microTronToTron.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updateBuyValue\",\n    value: function () {\n      var _updateBuyValue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(evt) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (evt.target.value < 10) evt.target.value = 10;\n                _context7.next = 3;\n                return this.setState({\n                  buyValue: evt.target.value\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function updateBuyValue(_x) {\n        return _updateBuyValue.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"onOtherPlayer\",\n    value: function () {\n      var _onOtherPlayer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        var playerAddress2;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context8.sent;\n\n                if (this.state.playerAddress != this.state.originalPlayer) {\n                  document.getElementById(\"homeButtonSearch\").style.display = \"block\";\n                  document.getElementById(\"searchButton2\").style.display = \"block\";\n                  document.getElementById(\"otherButtons\").style.display = \"none\";\n                } else {\n                  document.getElementById(\"homeButtonSearch\").style.display = \"none\";\n                  document.getElementById(\"searchButton2\").style.display = \"none\";\n                  document.getElementById(\"otherButtons\").style.display = \"block\";\n                }\n\n                this.getContractBalance();\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      return function onOtherPlayer() {\n        return _onOtherPlayer.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"returnHome\",\n    value: function () {\n      var _returnHome = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9() {\n        var playerAddress2;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context9.sent;\n                _context9.next = 5;\n                return this.setState({\n                  playerAddress: playerAddress2\n                });\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      return function returnHome() {\n        return _returnHome.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"updatePlayerAddressInput\",\n    value: function () {\n      var _updatePlayerAddressInput = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee10() {\n        var tempAddPlayer;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                tempAddPlayer = document.getElementById(\"searchThePlayer\").value;\n                _context10.next = 3;\n                return this.setState({\n                  tempAddress: tempAddPlayer\n                });\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      return function updatePlayerAddressInput() {\n        return _updatePlayerAddressInput.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"buyTron\",\n    value: function () {\n      var _buyTron = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var _this3 = this;\n\n        var playerAddress2, _ref, value;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context11.sent;\n                _context11.next = 5;\n                return Swal({\n                  title: 'Buy Tron²',\n                  text: 'Enter Tron² amount in TRX',\n                  confirmButtonText: 'Buy',\n                  input: 'text',\n                  showCancelButton: true,\n                  showLoaderOnConfirm: true,\n                  reverseButtons: true,\n                  allowOutsideClick: function allowOutsideClick() {\n                    return !Swal.isLoading();\n                  },\n                  allowEscapeKey: function allowEscapeKey() {\n                    return !Swal.isLoading();\n                  },\n                  preConfirm: function preConfirm(amount) {\n                    if (isNaN(amount) || amount <= 0) {\n                      Swal.showValidationMessage('Invalid Tron² amount provided');\n                      return false;\n                    }\n\n                    return Utils.contract.buyTron2(_this3.state.playerAddress).send({\n                      callValue: Number(amount) * 1000000\n                    }).then(function (res) {\n                      return Swal({\n                        title: 'Purchase Sucessful!',\n                        type: 'success'\n                      });\n                    }).catch(function (err) {\n                      return Swal({\n                        title: 'Purchase Failed.',\n                        type: 'error'\n                      });\n                    });\n                  }\n                });\n\n              case 5:\n                _ref = _context11.sent;\n                value = _ref.value;\n                this.getContractBalance();\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      return function buyTron() {\n        return _buyTron.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"sellTron\",\n    value: function () {\n      var _sellTron = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12() {\n        var playerAddress2;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return Utils.contract.getPlayerAddress().call();\n\n              case 2:\n                playerAddress2 = _context12.sent;\n                Utils.contract.sellMicroTron(this.state.playerAddress).send();\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      return function sellTron() {\n        return _sellTron.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"rw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"bgBottom\",\n        alt: \"some value\",\n        src: \"IdleTronWebBottom.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        id: \"bgTop\",\n        alt: \"some value\",\n        src: \"IdleTronWebTop.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"gameHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"headerTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"gameTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Idle Tron\"), React.createElement(\"p\", {\n        id: \"contractBal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Contract Balance: 0 TRX\")), React.createElement(\"div\", {\n        className: \"headSpacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"TRX\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"tron2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"Tron\\xB2\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"microTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"0\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"headerTitle3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"MicroTron\")), React.createElement(\"div\", {\n        id: \"headerTitle2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"buyMicroTronButton2 updateBalance\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.getContractBalance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Update Balances\"))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        id: \"getTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTron2Button2\",\n        id: \"homeButtonSearch\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.returnHome();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"productionText3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"Current Player: Tx\"), React.createElement(\"p\", {\n        id: \"productionText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"0 MicroTron per Second\"), React.createElement(\"p\", {\n        id: \"productionText2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"0.0000000 TRX per Second\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"otherButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"buySell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"1 Tron = 0.95 Tron\\xB2\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.buyTron();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"Buy Tron\\xB2\")), React.createElement(\"div\", {\n        className: \"buySell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"1e4 MicroTron = 0.95 Tron\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.sellTron();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"microTronToTron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Sell MicroTron for 0 TRX\"))), React.createElement(\"div\", {\n        className: \"buySell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, \"See someone else's progress\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.openSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"Search Player\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"searchButton2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"See someone else's progress\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.openSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Search Player\"))), React.createElement(\"div\", {\n        id: \"player-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"buyMicroTronButton4\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.closeSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"Back\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        id: \"productionText2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Search a player:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"css-input\",\n        id: \"searchThePlayer\",\n        placeholder: \"Enter Address\",\n        onChange: this.updatePlayerAddressInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton5\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.searchThatPlayer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \"Search Player\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"buyMicroTronButton5\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this4.openSearch();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"Random Player\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","buyValue","playerAddress","tempAddress","originalPlayer","tronWeb","installed","loggedIn","init","bind","updateBuyValue","buyTron","getTronBalance","getTron2Balance","getMicroTronBalance","getContractBalance","microTronToTron","updatePlayerAddressInput","returnHome","onOtherPlayer","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","global","defaultAddress","hex","address","toHex","base58","on","setTronWeb","contract","getPlayerAddress","call","temp","console","log","publicPlayer","document","getElementById","style","display","bal","toNumber","exponent","Math","floor","log10","abs","mantissa","pow","innerHTML","toFixed","fromHex","toString","playerAddress2","playerAd3","getBalance","getMyTron2","production","temp1","temp2","getMyMicroTron","evt","target","value","tempAddPlayer","title","text","confirmButtonText","input","showCancelButton","showLoaderOnConfirm","reverseButtons","allowOutsideClick","isLoading","allowEscapeKey","preConfirm","amount","isNaN","showValidationMessage","buyTron2","send","callValue","Number","then","res","type","catch","err","sellMicroTron","event","preventDefault","sellTron","openSearch","closeSearch","searchThatPlayer","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TRi54MRJgohaA1yiFesZAY1NKYey9HJcLv';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buyValue: 10,\n            playerAddress: 'yes',\n            tempAddress: 'plz',\n            originalPlayer: 'wow',\n\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            },\n        }\n        this.init = this.init.bind(this)\n        this.updateBuyValue = this.updateBuyValue.bind(this)\n\n        this.buyTron = this.buyTron.bind(this);\n        this.getTronBalance = this.getTronBalance.bind(this);\n        this.getTron2Balance = this.getTron2Balance.bind(this);\n        this.getMicroTronBalance = this.getMicroTronBalance.bind(this);\n        this.getContractBalance = this.getContractBalance.bind(this);\n        this.microTronToTron = this.microTronToTron.bind(this);\n        this.updatePlayerAddressInput = this.updatePlayerAddressInput.bind(this);\n        this.returnHome = this.returnHome.bind(this);\n        this.onOtherPlayer = this.onOtherPlayer.bind(this);\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!global.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: global.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n        var temp = await Utils.contract.getPlayerAddress().call();\n        console.log(temp);\n        this.setState({playerAddress: temp});\n        this.setState({originalPlayer: temp})\n        console.log(this.state.playerAddress);\n\n        console.log(this.tronWeb);\n        //document.getElementById(\"productionText3\").innerHTML = \"Current Player: \" + this.tronWeb.address.fromHex((this.state.playerAddress).toString());\n        //this.getContractBalance();\n        this.init();\n    }\n\n    init()\n    {\n        const publicPlayer = 1;\n        this.getContractBalance();\n        document.getElementById(\"dice-game\").style.display = \"block\";\n        setInterval(function(){\n            this.getTronBalance();\n        }, 2000);\n        Utils.setTronWeb(window.tronWeb, contractAddress);\n    }\n\n    openSearch()\n    {\n        document.getElementById(\"player-search\").style.display = \"block\";\n    }\n\n    closeSearch()\n    {\n        document.getElementById(\"player-search\").style.display = \"none\";\n    }\n\n    searchThatPlayer()\n    {\n        this.setState({playerAddress: this.state.tempAddress});\n    }\n\n    async getContractBalance()\n    {\n        const bal = (await Utils.contract.getContractBalance().call()).toNumber();\n\n        if (bal > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(bal))));\n            const mantissa = (bal / Math.pow(10, exponent));\n            document.getElementById(\"contractBal\").innerHTML = \"Contract Balance \" + mantissa.toFixed(2) + \"e\" + exponent + \" TRX\";\n        }\n        else\n            document.getElementById(\"contractBal\").innerHTML = \"Contract Balance \" + bal + \" TRX\";\n\n        document.getElementById(\"productionText3\").innerHTML = \"Current Player: \" + this.tronWeb.address.fromHex((this.state.playerAddress).toString());\n\n\n        this.getTronBalance();\n    }\n\n    async getTronBalance()\n    {\n        const playerAddress2 = this.state.playerAddress;\n        const playerAd3 = await Utils.contract.getPlayerAddress().call();\n        console.log(playerAddress2);\n        console.log(playerAd3);\n        console.log(this.state.playerAddress);\n        const bal = (await Utils.contract.getBalance(this.state.playerAddress).call()).toNumber();\n\n        if (bal > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(bal))));\n            const mantissa = (bal / Math.pow(10, exponent));\n            document.getElementById(\"tron\").innerHTML = mantissa.toFixed(2) + \"e\" + exponent;\n        }\n        else\n            document.getElementById(\"tron\").innerHTML = bal;\n\n        this.getTron2Balance();\n    }\n\n    async getTron2Balance()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.getMyTron2(this.state.playerAddress).call()).toNumber();\n        const production = bal * 5;\n\n        const temp1 = (production / 100);\n        const temp2 = ((((production / 100) * 100) - ((production / 100) * 0.05) * 100) / 1000000);\n\n        if (temp1 > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(temp1))));\n            const mantissa = (temp1 / Math.pow(10, exponent));\n            document.getElementById(\"productionText\").innerHTML = \"~\" + mantissa.toFixed(2) + \"e\" + exponent + \" MicroTron per Second\";\n        }\n        else\n            document.getElementById(\"productionText\").innerHTML = \"~\"  + temp1.toFixed(2) + \" MicroTron per Second\";\n\n        if (temp2 > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(temp2))));\n            const mantissa = (temp2 / Math.pow(10, exponent));\n            document.getElementById(\"productionText2\").innerHTML = \"~\" + mantissa.toFixed(2) + \"e\" + exponent + \" TRX per Second\";\n        }\n        else\n            document.getElementById(\"productionText2\").innerHTML = \"~\"  + temp2.toFixed(8) + \" TRX per Second\";\n\n        if (bal > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(bal))));\n            const mantissa = (bal / Math.pow(10, exponent));\n            document.getElementById(\"tron2\").innerHTML = mantissa.toFixed(2) + \"e\" + exponent;\n        }\n        else\n            document.getElementById(\"tron2\").innerHTML = bal;\n\n        this.getMicroTronBalance();\n    }\n\n    async getMicroTronBalance()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.getMyMicroTron(this.state.playerAddress).call()).toNumber();\n\n        if (bal > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(bal))));\n            const mantissa = (bal / Math.pow(10, exponent));\n            document.getElementById(\"microTron\").innerHTML = mantissa.toFixed(2) + \"e\" + exponent;\n        }\n        else\n            document.getElementById(\"microTron\").innerHTML = bal;\n\n        this.microTronToTron();\n    }\n\n    async microTronToTron()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        const bal = (await Utils.contract.microTronToTron(this.state.playerAddress).call()).toNumber();\n\n        if (bal > 1000)\n        {\n            const exponent = (Math.floor(Math.log10(Math.abs(bal))));\n            const mantissa = (bal / Math.pow(10, exponent));\n            document.getElementById(\"microTronToTron\").innerHTML = \"Sell MicroTron for \" + mantissa.toFixed(2) + \"e\" + exponent + \" TRX\";\n        }\n        else\n            document.getElementById(\"microTronToTron\").innerHTML = \"Sell MicroTron for \" + bal + \" TRX\";\n\n        this.onOtherPlayer();\n    }\n\n    async updateBuyValue (evt)\n    {\n        if (evt.target.value < 10)\n            evt.target.value = 10\n        await this.setState({\n            buyValue: evt.target.value\n        });\n    }\n\n    async onOtherPlayer()\n    {\n\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        if (this.state.playerAddress != this.state.originalPlayer)\n        {\n            document.getElementById(\"homeButtonSearch\").style.display = \"block\";\n            document.getElementById(\"searchButton2\").style.display = \"block\";\n            document.getElementById(\"otherButtons\").style.display = \"none\";\n        }\n        else\n        {\n            document.getElementById(\"homeButtonSearch\").style.display = \"none\";\n            document.getElementById(\"searchButton2\").style.display = \"none\";\n            document.getElementById(\"otherButtons\").style.display = \"block\";\n        }\n        this.getContractBalance();\n    }\n\n    async returnHome()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        await this.setState({playerAddress: playerAddress2});\n    }\n\n    async updatePlayerAddressInput()\n    {\n        const tempAddPlayer = document.getElementById(\"searchThePlayer\").value\n        await this.setState({tempAddress: tempAddPlayer});\n        // TLVQYYQBHcDvYCJkdZizJviDocePbPTjod\n    }\n\n    async buyTron()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        const { value } = await Swal({\n                    title: 'Buy Tron²',\n                    text: 'Enter Tron² amount in TRX',\n                    confirmButtonText: 'Buy',\n                    input: 'text',\n                    showCancelButton: true,\n                    showLoaderOnConfirm: true,\n                    reverseButtons: true,\n                    allowOutsideClick: () => !Swal.isLoading(),\n                    allowEscapeKey: () => !Swal.isLoading(),\n                    preConfirm: amount => {\n                        if(isNaN(amount) || amount <= 0) {\n                            Swal.showValidationMessage('Invalid Tron² amount provided');\n                            return false;\n                        }\n                        return Utils.contract.buyTron2(this.state.playerAddress).send({\n                            callValue: Number(amount) * 1000000\n                            }).then(res => Swal({\n                                title: 'Purchase Sucessful!',\n                                type: 'success'\n                            })).catch(err => Swal({\n                                title: 'Purchase Failed.',\n                                type: 'error',\n                        }));\n                    }\n                });\n        this.getContractBalance();\n    }\n\n    async sellTron()\n    {\n        const playerAddress2 = await Utils.contract.getPlayerAddress().call();\n        Utils.contract.sellMicroTron(this.state.playerAddress).send();\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n\n            <div className='rw'>\n                    <img id=\"bgBottom\" alt='some value' src=\"IdleTronWebBottom.png\"></img>\n                    <img id=\"bgTop\" alt='some value' src=\"IdleTronWebTop.png\"></img>\n                <div className=\"gameHeader\">\n                    <div id=\"headerTitle\">\n                        <p className=\"gameTitle\">Idle Tron</p>\n                        <p id=\"contractBal\">Contract Balance: 0 TRX</p>\n                    </div>\n\n                    <div className=\"headSpacer\">\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            TRX\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"tron2\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            Tron²\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <p id=\"microTron\">\n                            0\n                        </p>\n                        <br></br>\n                        <p id=\"headerTitle3\">\n                            MicroTron\n                        </p>\n                    </div>\n                    <div id=\"headerTitle2\">\n                        <button className=\"buyMicroTronButton2 updateBalance\" onClick={(event) => {event.preventDefault(); this.getContractBalance();}}>\n                            Update Balances\n                        </button>\n                    </div>\n                </div>\n\n\n                <div className='text-center'>\n                    <hr/>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                    <span id=\"getTron\"></span>\n                    <br></br>\n                        <br></br>\n\n                <button className=\"buyMicroTron2Button2\" id=\"homeButtonSearch\" onClick={(event) => {event.preventDefault(); this.returnHome();}}>\n                    Back\n                </button>\n                        <br></br>\n                        <p id=\"productionText3\">\n                            Current Player: Tx\n                        </p>\n                        <p id=\"productionText\">\n                            0 MicroTron per Second\n                        </p>\n                        <p id=\"productionText2\">\n                            0.0000000 TRX per Second\n                        </p>\n\n                        <br></br>\n                        <br></br>\n                    <center>\n                    <div id=\"otherButtons\">\n                        <div className=\"buySell\">\n                            1 Tron = 0.95 Tron²\n                            <br></br>\n                            <br></br>\n                            <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.buyTron();}}>\n                                Buy Tron²\n                            </button>\n                        </div>\n                        <div className=\"buySell\">\n                            1e4 MicroTron = 0.95 Tron\n                            <br></br>\n                            <br></br>\n                            <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.sellTron();}}>\n                                <p id=\"microTronToTron\">\n                                    Sell MicroTron for 0 TRX\n                                </p>\n                            </button>\n                        </div>\n                        <div className=\"buySell\">\n                            See someone else's progress\n                            <br></br>\n                            <br></br>\n                            <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.openSearch();}}>\n                                Search Player\n                            </button>\n                        </div>\n                    </div>\n                    <br></br>\n                    <div id=\"searchButton2\">\n                        See someone else's progress\n                        <br></br>\n                        <br></br>\n                        <button className=\"buyMicroTronButton\" onClick={(event) => {event.preventDefault(); this.openSearch();}}>\n                            Search Player\n                        </button>\n                    </div>\n                    </center>\n                    <div id=\"player-search\">\n\n                        <button className=\"buyMicroTronButton4\" onClick={(event) => {event.preventDefault(); this.closeSearch();}}>\n                            Back\n                        </button>\n                        <br></br>\n                        <br></br>\n                        <br></br>\n                        <p id=\"productionText2\">Search a player:</p>\n\n                        <br></br>\n                        <input className=\"css-input\" id=\"searchThePlayer\" placeholder=\"Enter Address\" onChange={this.updatePlayerAddressInput}/>\n                        <button className=\"buyMicroTronButton5\" onClick={(event) => {event.preventDefault(); this.searchThatPlayer();}}>\n                            Search Player\n                        </button>\n                        <br></br>\n                        <br></br>\n                        <button className=\"buyMicroTronButton5\" onClick={(event) => {event.preventDefault(); this.openSearch();}}>\n                            Random Player\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}