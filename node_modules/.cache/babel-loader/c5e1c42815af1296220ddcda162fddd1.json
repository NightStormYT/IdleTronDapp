{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TPtQKZjJZQMvP6GcUrySzguY2BwwqzyNic'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      buyValue: 10,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.changeSide = _this.changeSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.init = _this.init.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBetValue = _this.updateBetValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyTron = _this.buyTron.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"changeSide\",\n    value: function () {\n      var _changeSide = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function changeSide() {\n        return _changeSide.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"roll\",\n    value: function () {\n      var _roll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function roll() {\n        return _roll.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"nextPlayer\",\n    value: function nextPlayer() {}\n  }, {\n    key: \"init\",\n    value: function init() {\n      document.getElementById(\"dice-game\").style.display = \"block\"; //document.getElementById(\"roll-button\").style.display = \"block\";\n    }\n  }, {\n    key: \"startEventListener\",\n    value: function startEventListener() {}\n  }, {\n    key: \"updateBetValue\",\n    value: function () {\n      var _updateBetValue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(evt) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function updateBetValue(_x) {\n        return _updateBetValue.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"buyTron\",\n    value: function buyTron() {// Utils.contract.buyMicroTron().send({})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"topnav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'CodeXpert.png',\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"topnav\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Idle Tron\"), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" MicroTron: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.init();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Start Game\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), \"Buy MicroTron:\", React.createElement(\"div\", {\n        className: \"div-bet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        style: {\n          width: \"100px\"\n        },\n        value: this.state.buyValue,\n        onChange: this.updateBetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-roll\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.roll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-dice fa-5x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Roll The Dice\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/zachchampeau/Desktop/CodeXpert-Tron-Dice-Game-DApp-Tutorial-Series-master/CodeXpert-Tron-Dice-Game-DApp-Template/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","App","props","state","buyValue","tronWeb","installed","loggedIn","changeSide","bind","init","updateBetValue","buyTron","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","document","getElementById","style","display","evt","color","backgroundColor","height","event","preventDefault","width","roll","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TPtQKZjJZQMvP6GcUrySzguY2BwwqzyNic';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            buyValue:10,\n\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            },\n        }\n        this.changeSide = this.changeSide.bind(this)\n        this.init = this.init.bind(this)\n        this.updateBetValue = this.updateBetValue.bind(this)\n\n        this.buyTron = this.buyTron.bind(this);\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n    }\n\n\n\n\n\n\n    async changeSide() {\n\n    }\n\n    async roll() {\n\n    };\n\n    nextPlayer() {\n    }\n\n    init()\n    {\n        document.getElementById(\"dice-game\").style.display = \"block\";\n        //document.getElementById(\"roll-button\").style.display = \"block\";\n    }\n\n\n    startEventListener(){\n\n    }\n\n    async updateBetValue (evt)\n    {\n        /*await this.setState({\n            buyValue\n        })*/\n    }\n\n    buyTron()\n    {\n        // Utils.contract.buyMicroTron().send({})\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n              <div className='row'>\n                <div className='col-lg-12 text-center' >\n                  <hr/>\n\n                      <div className=\"topnav\">\n                        <img src={'CodeXpert.png'} width=\"200\"/>\n                      </div>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n\n                  <h1 className=\"topnav\" style={{color : 'red' }}>Idle Tron</h1>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n                  <p> MicroTron: </p>\n                  <br/>\n                  <br/>\n\n\n\n      <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n                                                        this.init()}  }>Start Game</button>\n\n      <br/>\n      <br/>\n      <br/>\n\n            Buy MicroTron:\n            <div className=\"div-bet\">\n                <input style={{ width:\"100px\" }} value={this.state.buyValue} onChange={this.updateBetValue}/>\n                <button className=\"btn-roll\" onClick={(event) => {event.preventDefault(); this.roll();} }>\n                    <i className=\"fas fa-dice fa-5x\"></i>\n                </button>\n              <p>Roll The Dice</p>\n            </div>\n\n\n                </div>\n              </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}