{"ast":null,"code":"import _regeneratorRuntime from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/src/components/App/index.js\";\nimport React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\nimport './App.scss';\nvar FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg'; ////////////////////////////////////////////////////////////////////////////////////\n\nvar contractAddress = 'TDtbmxg4zhHYYaVRa7eTpyprpQuL5XtWEw'; /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\n\nvar activePlayer, cube, currentClass;\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tronwebaddress: '',\n      score0: '',\n      score1: '',\n      betvalue: 10,\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n    _this.changeSide = _this.changeSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.init = _this.init.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateBetValue = _this.updateBetValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  loading: true\n                });\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var tronWebState = {\n                    installed: !!window.tronWeb,\n                    loggedIn: window.tronWeb && window.tronWeb.ready\n                  };\n\n                  if (tronWebState.installed) {\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    return resolve();\n                  }\n\n                  var tries = 0;\n                  var timer = setInterval(function () {\n                    if (tries >= 10) {\n                      var TRONGRID_API = 'https://api.trongrid.io';\n                      window.tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n                      _this2.setState({\n                        tronWeb: {\n                          installed: false,\n                          loggedIn: false\n                        }\n                      });\n\n                      clearInterval(timer);\n                      return resolve();\n                    }\n\n                    tronWebState.installed = !!window.tronWeb;\n                    tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n                    if (!tronWebState.installed) return tries++;\n\n                    _this2.setState({\n                      tronWeb: tronWebState\n                    });\n\n                    resolve();\n                  }, 100);\n                });\n\n              case 3:\n                if (!this.state.tronWeb.loggedIn) {\n                  // Set default address (foundation address) used for contract calls\n                  // Directly overwrites the address object as TronLink disabled the\n                  // function call\n                  window.tronWeb.defaultAddress = {\n                    hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                    base58: FOUNDATION_ADDRESS\n                  };\n                  window.tronWeb.on('addressChanged', function () {\n                    if (_this2.state.tronWeb.loggedIn) return;\n\n                    _this2.setState({\n                      tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                      }\n                    });\n                  });\n                }\n\n                _context.next = 6;\n                return Utils.setTronWeb(window.tronWeb, contractAddress);\n\n              case 6:\n                this.startEventListener();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"changeSide\",\n    value: function () {\n      var _changeSide = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var dice, showClass;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dice = Math.floor(Math.random() * 6) + 1;\n                showClass = 'show-' + dice;\n\n                if (currentClass) {\n                  cube.classList.remove(currentClass);\n                }\n\n                cube.classList.add(showClass);\n\n                if (!(activePlayer == 0)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 7;\n                return this.setState({\n                  score0: dice\n                });\n\n              case 7:\n                Utils.contract.placeBet(this.state.betvalue * 100000000, dice).send({\n                  shouldPollResponse: true,\n                  callValue: 0\n                }).then(function (res) {\n                  return Swal({\n                    title: 'Bet Successful',\n                    type: 'success'\n                  });\n                }).catch(function (err) {\n                  return Swal({\n                    title: 'Bet Failed',\n                    type: 'error'\n                  });\n                });\n\n              case 8:\n                if (!(activePlayer == 1)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 11;\n                return this.setState({\n                  score1: dice\n                });\n\n              case 11:\n                Utils.contract.placeBet(this.state.betvalue * 100000000, dice).send({\n                  shouldPollResponse: true,\n                  callValue: 0\n                }).catch(function (err) {\n                  return Swal({\n                    title: 'Bet Failed',\n                    type: 'error'\n                  });\n                });\n\n              case 12:\n                this.nextPlayer();\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function changeSide() {\n        return _changeSide.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"roll\",\n    value: function () {\n      var _roll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var counter, loopCount, spinCube, interval;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                spinCube = function _ref() {\n                  if (++counter >= loopCount) {\n                    clearInterval(interval);\n                    cube.classList.remove('animation-2');\n                  } else {\n                    cube.classList.add('animation-2');\n                  }\n                };\n\n                cube.classList.remove('animation-1');\n                counter = 0;\n                loopCount = 30;\n                interval = setInterval(spinCube, 60);\n                this.changeSide();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function roll() {\n        return _roll.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"nextPlayer\",\n    value: function nextPlayer() {\n      activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;\n      document.querySelector('.player-0-panel').classList.toggle('active');\n      document.querySelector('.player-1-panel').classList.toggle('active');\n      document.querySelector('.fa-dice').classList.toggle('fa-flip-horizontal');\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      activePlayer = 0;\n      cube = document.querySelector('.cube');\n      this.setState({\n        score0: 0\n      });\n      this.setState({\n        score1: 0\n      });\n      document.getElementById('name-0').textContent = 'Player1';\n      document.getElementById('name-1').textContent = 'Player2';\n      document.querySelector('.player-0-panel').classList.remove('active');\n      document.querySelector('.player-1-panel').classList.remove('active');\n      document.querySelector('.player-0-panel').classList.add('active');\n      document.querySelector('.dice').classList.remove('displaynone');\n      cube.classList.add('animation-1');\n      document.getElementById(\"dice-game\").style.display = \"block\";\n      document.getElementById(\"roll-button\").style.display = \"block\";\n    }\n  }, {\n    key: \"startEventListener\",\n    value: function startEventListener() {\n      Utils.contract.DiceResult().watch(function (err, _ref2) {\n        var result = _ref2.result;\n\n        if (err) {\n          return console.log(\"Failed to bind the event : \", err);\n        }\n\n        if (result.value == 1) {\n          Swal({\n            title: 'Player1 Won!',\n            type: 'success'\n          });\n        }\n\n        if (result.value == 2) {\n          Swal({\n            title: 'Player2 Won!',\n            type: 'success'\n          });\n        }\n\n        if (result.value == 0) {\n          Swal({\n            title: 'Match Draw!',\n            type: 'success'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"updateBetValue\",\n    value: function () {\n      var _updateBetValue = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(evt) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.setState({\n                  betvalue: evt.target.value\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function updateBetValue(_x) {\n        return _updateBetValue.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.tronWeb.installed) return React.createElement(TronLinkGuide, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      });\n      if (!this.state.tronWeb.loggedIn) return React.createElement(TronLinkGuide, {\n        installed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"topnav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: 'CodeXpert.png',\n        width: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"topnav\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"TRON TRC20 TOKEN DICE GAME\"), React.createElement(\"hr\", {\n        style: {\n          color: 'white',\n          backgroundColor: 'white',\n          height: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \" Your Address :  \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.init();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Start New game \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"dice-game\",\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-0-panel active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-name\",\n        id: \"name-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Player 1\"), React.createElement(\"div\", {\n        className: \"player-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.state.score0)), React.createElement(\"div\", {\n        className: \"player-1-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"player-name\",\n        id: \"name-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Player 2\"), React.createElement(\"div\", {\n        className: \"player-score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.state.score1))), React.createElement(\"div\", {\n        id: \"roll-button\",\n        className: \"div-bet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        style: {\n          width: \"100px\"\n        },\n        value: this.state.betvalue,\n        onChange: this.updateBetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-roll\",\n        onClick: function onClick(event) {\n          event.preventDefault();\n\n          _this3.roll();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-dice fa-5x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Roll The Dice\")))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/krishnakulkarni/Documents/CodeXpert/GIT/Tron_Dice_Game_DApp_Advanced/Current_working/src/components/App/index.js"],"names":["React","TronLinkGuide","TronWeb","Utils","Swal","FOUNDATION_ADDRESS","contractAddress","activePlayer","cube","currentClass","App","props","state","tronwebaddress","score0","score1","betvalue","tronWeb","installed","loggedIn","changeSide","bind","init","updateBetValue","setState","loading","Promise","resolve","tronWebState","window","ready","tries","timer","setInterval","TRONGRID_API","clearInterval","defaultAddress","hex","address","toHex","base58","on","setTronWeb","startEventListener","dice","Math","floor","random","showClass","classList","remove","add","contract","placeBet","send","shouldPollResponse","callValue","then","res","title","type","catch","err","nextPlayer","spinCube","counter","loopCount","interval","document","querySelector","toggle","getElementById","textContent","style","display","DiceResult","watch","result","console","log","value","evt","target","color","backgroundColor","height","event","preventDefault","width","roll","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TronLinkGuide from 'components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from 'utils';\nimport Swal from 'sweetalert2';\n\n\nimport './App.scss';\n\nconst FOUNDATION_ADDRESS = 'TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg';\n\n////////////////////////////////////////////////////////////////////////////////////\nconst contractAddress = 'TDtbmxg4zhHYYaVRa7eTpyprpQuL5XtWEw';   /// Add your contract address here\n////////////////////////////////////////////////////////////////////////////////////\nvar activePlayer, cube, currentClass;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n              tronwebaddress:'',\n              score0:'',\n              score1:'',\n              betvalue:10,\n\n              tronWeb: {\n                  installed: false,\n                  loggedIn: false\n              },\n            }\n        this.changeSide = this.changeSide.bind(this)\n        this.init = this.init.bind(this)\n        this.updateBetValue = this.updateBetValue.bind(this)\n    }\n\n    async componentDidMount() {\n\n        this.setState({loading:true})\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if(tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if(tries >= 10) {\n                    const TRONGRID_API = 'https://api.trongrid.io';\n\n                    window.tronWeb = new TronWeb(\n                        TRONGRID_API,\n                        TRONGRID_API,\n                        TRONGRID_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if(!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n            }, 100);\n        });\n\n        if(!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n                base58: FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if(this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        await Utils.setTronWeb(window.tronWeb, contractAddress);\n\n\n        this.startEventListener();\n\n    }\n\n\n\n\n\n\n    async changeSide() {\n\n        var dice = (Math.floor(Math.random()*6) + 1);\n        var showClass = 'show-' + dice;\n        if(currentClass){\n\n            cube.classList.remove(currentClass);\n        }\n        cube.classList.add(showClass);\n\n        if(activePlayer == 0){\n            await this.setState({\n              score0: dice\n            });\n\n            Utils.contract.placeBet(this.state.betvalue*100000000, dice).send({\n                shouldPollResponse:true,\n                callValue:0\n\n            }).then(res => Swal({\n                title:'Bet Successful',\n                type: 'success'\n\n            })).catch(err => Swal(\n                {\n                     title:'Bet Failed',\n                     type: 'error'\n                }\n            ));\n\n        }\n\n\n        if(activePlayer == 1){\n            await this.setState({\n              score1: dice\n            });\n\n            Utils.contract.placeBet(this.state.betvalue*100000000, dice).send({\n                shouldPollResponse:true,\n                callValue:0\n\n            }).catch(err => Swal(\n                {\n                     title:'Bet Failed',\n                     type: 'error'\n                }\n            ));\n\n\n        }\n\n        this.nextPlayer();\n    }\n\n    async roll() {\n\n      cube.classList.remove('animation-1');\n      var counter = 0;\n      var loopCount = 30;\n      function spinCube() {\n\n        if (++counter >= loopCount) {\n            clearInterval(interval);\n            cube.classList.remove('animation-2');\n        } else {\n            cube.classList.add('animation-2');\n        }\n      }\n      var interval = setInterval(spinCube, 60);\n\n      this.changeSide();\n\n\n    };\n\n    nextPlayer() {\n\n      activePlayer === 0 ? activePlayer = 1 : activePlayer = 0;\n      document.querySelector('.player-0-panel').classList.toggle('active');\n      document.querySelector('.player-1-panel').classList.toggle('active');\n      document.querySelector('.fa-dice').classList.toggle('fa-flip-horizontal');\n\n    }\n\n    init() {\n\n          activePlayer = 0;\n\n          cube = document.querySelector('.cube');\n\n          this.setState({score0:0});\n          this.setState({score1:0});\n\n          document.getElementById('name-0').textContent = 'Player1';\n          document.getElementById('name-1').textContent = 'Player2';\n          document.querySelector('.player-0-panel').classList.remove('active');\n          document.querySelector('.player-1-panel').classList.remove('active');\n          document.querySelector('.player-0-panel').classList.add('active');\n          document.querySelector('.dice').classList.remove('displaynone');\n          cube.classList.add('animation-1');\n          document.getElementById(\"dice-game\").style.display = \"block\";\n          document.getElementById(\"roll-button\").style.display = \"block\";\n\n    }\n\n\n    startEventListener(){\n\n    Utils.contract.DiceResult().watch((err, {result}) =>{\n\n    if(err){return console.log(\"Failed to bind the event : \", err);}\n\n    if(result.value == 1){\n\n         Swal({\n                title:'Player1 Won!',\n                type: 'success'\n\n            })\n    }\n\n    if(result.value == 2){\n\n         Swal({\n                title:'Player2 Won!',\n                type: 'success'\n\n            })\n    }\n\n    if(result.value == 0){\n\n         Swal({\n                title:'Match Draw!',\n                type: 'success'\n\n            })\n    }\n\n    })\n\n    }\n\n    async updateBetValue (evt) {\n\n        await this.setState({\n          betvalue: evt.target.value\n        });\n    }\n\n    render() {\n        if(!this.state.tronWeb.installed)\n            return <TronLinkGuide />;\n\n        if(!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed />;\n\n        return (\n              <div className='row'>\n                <div className='col-lg-12 text-center' >\n                  <hr/>\n\n                      <div className=\"topnav\">\n                        <img src={'CodeXpert.png'} width=\"200\"/>\n                      </div>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n\n                  <h1 className=\"topnav\" style={{color : 'red' }}>TRON TRC20 TOKEN DICE GAME</h1>\n                  <hr style={{color: 'white', backgroundColor: 'white', height: 0.5}}/>\n                  <p> Your Address :  </p>\n                  <br/>\n                  <br/>\n\n\n\n      <button className=\"btn btn-primary\" onClick={(event) => {event.preventDefault()\n                                                        this.init()}  }>Start New game </button>\n\n      <br/>\n      <br/>\n      <br/>\n\n      <div id=\"dice-game\" style={{display:'none'}}>\n          <div className=\"grid-container\">\n               <div className=\"player-0-panel active\">\n                  <div className=\"player-name\" id=\"name-0\">Player 1</div>\n                  <div className=\"player-score\" >{this.state.score0}</div>\n\n               </div>\n            <div className=\"player-1-panel\">\n              <div className=\"player-name\" id=\"name-1\">Player 2</div>\n              <div className=\"player-score\">{this.state.score1}</div>\n            </div>\n          </div>\n\n          <div id=\"roll-button\" className=\"div-bet\">\n               <input style={{ width:\"100px\" }} value={this.state.betvalue} onChange={this.updateBetValue}/>\n\n              <button className=\"btn-roll\" onClick={(event) => {event.preventDefault()\n                                                                              this.roll()}  }><i className=\"fas fa-dice fa-5x\"></i></button>\n              <p>Roll The Dice</p>\n          </div>\n      </div>\n\n\n                </div>\n              </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}